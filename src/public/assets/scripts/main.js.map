{"version":3,"sources":["transects/main.js","projects/controllers/ProjectTransectController.js","projects/controllers/ProjectTransectsController.js","transects/controllers/ImagePageButtonController.js","transects/controllers/ImagesController.js","transects/controllers/SidebarController.js","transects/controllers/TransectsController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/**\n * @namespace dias.transects\n * @description The DIAS transects module.\n */\nangular.module('dias.transects', ['dias.api']);\n","/**\n * @namespace dias.projects\n * @ngdoc controller\n * @name ProjectTransectController\n * @memberOf dias.projects\n * @description Controller for a single transect in the transect list of the\n * project index page.\n */\ntry {\nangular.module('dias.projects').controller('ProjectTransectController', function ($scope, $element, $modal, ProjectTransect, msg) {\n\t\t\"use strict\";\n\n\t\tvar showConfirmationModal = function () {\n\t\t\tvar modalInstance = $modal.open({\n\t\t\t\ttemplateUrl: 'confirmDeleteTransectModal.html',\n\t\t\t\tsize: 'sm'\n\t\t\t});\n\n\t\t\treturn modalInstance;\n\t\t};\n\n\t\tvar removeSuccess = function () {\n\t\t\t$scope.removeTransect($scope.$index);\n\t\t};\n\n\t\tvar removeError = function (response) {\n\t\t\tif (response.status === 400) {\n\t\t\t\tshowConfirmationModal().result.then(function (result) {\n\t\t\t\t\tif (result == 'force') {\n\t\t\t\t\t\t$scope.remove(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$scope.cancelRemove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmsg.responseError(response);\n\t\t\t}\n\t\t};\n\n\t\t$scope.startRemove = function () {\n\t\t\t$scope.removing = true;\n\t\t};\n\n\t\t$scope.cancelRemove = function () {\n\t\t\t$scope.removing = false;\n\t\t};\n\n\t\t$scope.remove = function (force) {\n\t\t\tvar params;\n\n\t\t\tif (force) {\n\t\t\t\tparams = {project_id: $scope.projectId, force: true};\n\t\t\t} else {\n\t\t\t\tparams = {project_id: $scope.projectId};\n\t\t\t}\n\n\t\t\tProjectTransect.detach(\n\t\t\t\tparams, {id: $scope.transect.id},\n\t\t\t\tremoveSuccess, removeError\n\t\t\t);\n\t\t};\n\n\t\t$scope.$watch('editing', function (editing) {\n\t\t\tif (!editing) {\n\t\t\t\t$scope.cancelRemove();\n\t\t\t}\n\t\t});\n\t}\n);\n} catch (e) {\n\t// dias.projects is not loaded on this page\n}","/**\n * @namespace dias.projects\n * @ngdoc controller\n * @name ProjectTransectsController\n * @memberOf dias.projects\n * @description Handles modification of the transects of a project.\n */\ntry {\nangular.module('dias.projects').controller('ProjectTransectsController', function ($scope, ProjectTransect) {\n\t\t\"use strict\";\n\n\t\t$scope.transects = ProjectTransect.query({ project_id: $scope.projectId });\n\n\t\t$scope.edit = function () {\n\t\t\t$scope.editing = !$scope.editing;\n\t\t};\n\n\t\t$scope.removeTransect = function (index) {\n\t\t\t$scope.transects.splice(index, 1);\n\t\t};\n\n\t\t// leave editing mode when there are no more transects to edit\n\t\t$scope.$watchCollection('transects', function (transects) {\n\t\t\tif (transects && transects.length === 0) {\n\t\t\t\t$scope.editing = false;\n\t\t\t}\n\t\t});\n\t}\n);\n} catch (e) {\n\t// dias.projects is not loaded on this page\n}","/**\n * @namespace dias.transects\n * @ngdoc controller\n * @name ImagePageButtonController\n * @memberOf dias.transects\n * @description Controls the button for going to the image index page when clicking on an image of the transects view.\n */\nangular.module('dias.transects').controller('ImagePageButtonController', function ($scope, $attrs) {\n\t\t\"use strict\";\n\n\t\tvar prefix = $attrs.imageUrl;\n\t\tvar suffix = '';\n\t\tvar id = 'image-page-button';\n\n\t\t$scope.selected = false;\n\n\t\t$scope.activate = function () {\n\t\t\t$scope.toggleButton(id);\n\t\t};\n\n\t\t$scope.$on('button.setActive', function (e, buttonId) {\n\t\t\t$scope.selected = id === buttonId;\n\t\t\tif ($scope.selected) {\n\t\t\t\t$scope.setImageUrl(prefix, suffix);\n\t\t\t}\n\t\t});\n\t}\n);","/**\n * @namespace dias.transects\n * @ngdoc controller\n * @name ImagesController\n * @memberOf dias.transects\n * @description Controller for displaying the huge amout of images of a\n * transect on a singe page.\n */\nangular.module('dias.transects').controller('ImagesController', function ($scope, TransectImage, $attrs, $element, $timeout) {\n\t\t\"use strict\";\n\n\t\tvar element = $element[0];\n\t\tvar boundingRect, timeoutPromise;\n\t\t// add this much images for each step\n\t\tvar step = 20;\n\t\t// offset of the element bottom to the window lower bound in pixels at \n\t\t// which a new bunch of images should be displayed\n\t\tvar newStepOffset = 100;\n\n\t\tvar needsNewStep = function () {\n\t\t\tboundingRect = element.getBoundingClientRect();\n\t\t\treturn element.scrollTop >= element.scrollHeight - element.offsetHeight - newStepOffset;\n\t\t};\n\n\t\tvar checkLowerBound = function () {\n\t\t\tif (needsNewStep()) {\n\t\t\t\t$scope.limit += step;\n\t\t\t\t$scope.$apply();\n\t\t\t}\n\t\t};\n\n\t\t// attempts to fill the current viewport with images\n\t\t// uses $timeout to wait for DOM rendering, then checks again\n\t\tvar initialize = function () {\n\t\t\tif (needsNewStep()) {\n\t\t\t\t$scope.limit += step;\n\t\t\t\ttimeoutPromise = $timeout(initialize, 500);\n\t\t\t} else {\n\t\t\t\t// viewport is full, now switch to event listeners for loading\n\t\t\t\t$timeout.cancel(timeoutPromise);\n\t\t\t\telement.addEventListener('scroll', checkLowerBound);\n\t\t\t\twindow.addEventListener('resize', checkLowerBound);\n\t\t\t}\n\t\t};\n\n\t\t// array of all image ids of this transect\n\t\t$scope.images = TransectImage.query({transect_id: $attrs.transectId});\n\t\t// number of currently shown images\n\t\t$scope.limit = 20;\n\n\t\t$timeout(initialize);\n\t}\n);","/**\n * @namespace dias.transects\n * @ngdoc controller\n * @name SidebarController\n * @memberOf dias.transects\n * @description Controller for the sidebar of the transects index page.\n */\nangular.module('dias.transects').controller('SidebarController', function ($scope, Image, $attrs) {\n\t\t\"use strict\";\n\n\t\t$scope.exifKeys = $attrs.exifKeys.split(',');\n\n\t\tvar handleImageClick = function (angularEvent, clickEvent, imageId) {\n\t\t\tif ($scope.active.button) return;\n\n\t\t\tclickEvent.preventDefault();\n\t\t\t$scope.imageData = Image.get({id: imageId});\n\t\t};\n\n\t\t$scope.$on('image.selected', handleImageClick);\n\t}\n);","/**\n * @namespace dias.transects\n * @ngdoc controller\n * @name TransectsController\n * @memberOf dias.transects\n * @description Controller for managing the transects index page.\n */\nangular.module('dias.transects').controller('TransectsController', function ($scope, $timeout) {\n\t\t\"use strict\";\n\n\t\tvar activeButtonStorageKey = 'dias.transects.index.active.button';\n\t\tvar prefix = '';\n\t\tvar suffix = '';\n\n\t\t$scope.active = {\n\t\t\timage: '',\n\t\t\tbutton: ''\n\t\t};\n\n\t\t$scope.getImageUrl = function (id) {\n\t\t\tif (!prefix && !suffix) {\n\t\t\t\treturn '#';\n\t\t\t}\n\t\t\treturn prefix + '/' + id + '/' + suffix;\n\t\t};\n\n\t\t$scope.setImageUrl = function (p, s) {\n\t\t\tprefix = p;\n\t\t\tsuffix = s;\n\t\t};\n\n\t\t$scope.imageSelected = function (e, id) {\n\t\t\t$scope.$broadcast('image.selected', e, id);\n\t\t\t$scope.active.image = id;\n\t\t};\n\n\t\t$scope.toggleButton = function (id) {\n\t\t\tif ($scope.active.button == id) {\n\t\t\t\tid = '';\n\t\t\t}\n\t\t\t$scope.active.button = id;\n\t\t\t$scope.$broadcast('button.setActive', id);\n\t\t\twindow.localStorage.setItem(activeButtonStorageKey, id);\n\t\t};\n\n\t\t// default active button is image page button if none was set in \n\t\t// localStorage\n\t\t// $scope.toggleButton(window.localStorage.getItem(activeButtonStorageKey) ||\t'image-page-button');\n\t\t$timeout(function () {\n\t\t\tvar id = window.localStorage.getItem(activeButtonStorageKey);\n\t\t\t$scope.toggleButton(id === null ? 'image-page-button' : id);\n\t\t});\n\t}\n);"],"sourceRoot":"/source/"}