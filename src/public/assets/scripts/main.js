angular.module("dias.transects",["dias.api","dias.ui"]),angular.module("dias.transects").config(["$compileProvider",function(e){"use strict";e.debugInfoEnabled(!1)}]),angular.module("dias.transects").controller("FilterController",["$scope","images","TRANSECT_ID","TRANSECT_IMAGES","filter",function(e,t,n,r,o){"use strict";e.active=o.hasRules,e.data={negate:"false",filter:null,selected:null},e.setFilterMode=function(e){o.setMode(e),t.updateSequence()},e.isFilterMode=function(e){return o.getMode()===e},e.getFilters=o.getAll,e.addRule=function(){var n={filter:e.data.filter,negate:"true"===e.data.negate,data:e.data.selected};o.hasRule(n)||o.addRule(n).then(t.updateSequence)},e.getRules=o.getAllRules,e.removeRule=function(e){o.removeRule(e),t.updateSequence()},e.rulesLoading=o.rulesLoading,e.numberImages=o.getNumberImages,e.selectData=function(t){e.data.selected=t}}]),angular.module("dias.transects").controller("ImagesController",["$scope","$element","images","filter","keyboard",function(e,t,n,r,o){"use strict";var i=function(){n.updateGrid(t[0].clientWidth,t[0].clientHeight)};e.imageHasFlag=r.hasFlag,e.getImageIds=n.getSequence,t.bind("wheel",function(t){n.scrollRows(t.deltaY>=0?1:-1),e.$apply()}),o.on(38,function(){n.scrollRows(-1),e.$apply()}),o.on(40,function(){n.scrollRows(1),e.$apply()}),o.on(37,function(){n.scrollRows(-1*n.getRows()),e.$apply()}),o.on(39,function(){n.scrollRows(n.getRows()),e.$apply()}),window.addEventListener("resize",function(){e.$apply(i)}),i()}]),angular.module("dias.transects").controller("SortByFilenameController",["$scope","sort","TransectImageOrderByFilename","TRANSECT_ID",function(e,t,n,r){"use strict";var o="filename",i="filename-sequence";e.active=function(){return t.isSorterActive("filename")},e.toggle=function(){e.active()||(e.hasCache(i)||(e.setLoading(!0),e.setCache(i,n.query({transect_id:r},function(){e.setLoading(!1)}))),e.getCache(i).$promise.then(function(t){e.activateSorter(o,t)}))}}]),angular.module("dias.transects").controller("SortByIdController",["$scope","sort","TRANSECT_IMAGES",function(e,t,n){"use strict";var r="id";e.active=function(){return t.isSorterActive("id")},e.toggle=function(){e.active()||e.activateSorter(r,n)}}]),angular.module("dias.transects").controller("SortController",["$scope","sort","images",function(e,t,n){"use strict";var r={},o=!1;e.setCache=function(e,t){r[e]=t},e.getCache=function(e){return r[e]},e.hasCache=function(e){return r.hasOwnProperty(e)},e.active=t.isActive,e.setSortAscending=function(){t.setAscending(),n.updateSequence()},e.setSortDescending=function(){t.setDescending(),n.updateSequence()},e.isSortAscending=t.isAscending,e.isSortDescending=t.isDescending,e.activateSorter=function(e,r){t.activateSorter(e,r),n.updateSequence()},e.resetSorting=function(){t.resetSorting()},e.setLoading=function(e){o=e},e.isLoading=function(){return o}}]),angular.module("dias.transects").controller("TransectController",["$scope","images",function(e,t){"use strict";e.progress=function(){return{width:100*t.progress()+"%"}}}]),angular.module("dias.transects").factory("TransectImageOrderByFilename",["$resource","URL",function(e,t){"use strict";return e(t+"/api/v1/transects/:transect_id/images/order-by/filename")}]),angular.module("dias.transects").directive("lazyImage",["$q",function(e){"use strict";return{restrict:"A",link:function(t,n,r){var o=e.defer(),i=function(){n.replaceWith(this),o.resolve()};t.enqueueImage(o.promise).then(function(){var e=document.createElement("img");e.onload=i,e.onerror=o.resolve,e.src=r.lazyImage})}}}]),angular.module("dias.transects").service("filter",["TRANSECT_ID","TRANSECT_IMAGES","filterSubset","filterExclude",function(e,t,n,r){"use strict";var o="filter",i=this,a="dias.transects."+e+".filter.rules",s="dias.transects."+e+".filter.mode",c=[],l=window.localStorage.getItem(s);l||(l=o);var u=JSON.parse(window.localStorage.getItem(a));u||(u=[]);var d=[],g=function(){angular.copy(t,d);for(var e,o=u.length-1;o>=0;o--)e=u[o],e.negate?r(d,e.ids):n(d,e.ids);u.length>0?window.localStorage.setItem(a,JSON.stringify(u)):window.localStorage.removeItem(a)};this.setMode=function(e){l=e,l!==o?window.localStorage.setItem(s,l):window.localStorage.removeItem(s)},this.getMode=function(){return l},this.add=function(e){if(!e.hasOwnProperty("name"))throw"A filter needs a name property";if(!e.hasOwnProperty("resource"))throw"A filter needs a resource property";c.push({name:e.name,resource:e.resource,typeahead:e.typeahead,transformData:e.transformData||angular.identity})},this.getAll=function(){return c},this.addRule=function(t){var n={filter:t.filter,negate:t.negate,data:t.data},r=function(){i.removeRule(n)},o=t.filter.transformData(t.data);return n.ids=t.filter.resource.query({transect_id:e,data:o},g,r),u.push(n),n.ids.$promise},this.getAllRules=function(){return u},this.removeRule=function(e){var t=u.indexOf(e);t>=0&&u.splice(t,1),g()},this.hasRule=function(e){for(var t,n=u.length-1;n>=0;n--)if(t=u[n],t.filter==e.filter&&t.negate==e.negate&&t.data==e.data)return!0;return!1},this.hasRules=function(){return u.length>0},this.rulesLoading=function(){for(var e=u.length-1;e>=0;e--)if(u[e].ids.$resolved===!1)return!0;return!1},this.getNumberImages=function(){return d.length},this.getSequence=function(){return"filter"===l?d:t},this.hasFlag=function(e){return"flag"===l?d.indexOf(e)>=0:!1},g()}]),angular.module("dias.transects").service("images",["$rootScope","TRANSECT_ID","TRANSECT_IMAGES","filterSubset","filter","sort","THUMB_DIMENSION",function(e,t,n,r,o,i,a){"use strict";var s="dias.transects."+t+".images",c=[],l={cols:0,rows:0},u=8,d=0;window.localStorage[s]?(c=JSON.parse(window.localStorage[s]),r(c,n,!0)):angular.copy(n,c),this.updateSequence=function(){var t=!1;i.isActive()?(t=!0,angular.copy(i.getSequence(),c),r(c,n,!0)):angular.copy(n,c),o.hasRules()&&(t=!0,r(c,o.getSequence())),t?window.localStorage[s]=JSON.stringify(c):window.localStorage.removeItem(s),e.$broadcast("transects.images.updated")},this.progress=function(){return d/c.length},this.updateGrid=function(e,t){l.cols=Math.floor(e/(a.WIDTH+u)),l.rows=Math.floor(t/(a.HEIGHT+u))},this.scrollRows=function(e){d=Math.max(0,Math.min(c.length-l.cols*l.rows,d+l.cols*e))},this.getSequence=function(){return c.slice(d,d+l.cols*l.rows)},this.getRows=function(){return l.rows},this.getCols=function(){return l.cols}}]),angular.module("dias.transects").service("sort",["TRANSECT_ID","TRANSECT_IMAGES",function(e,t){"use strict";var n="dias.transects."+e+".sorting.sorter",r="dias.transects."+e+".sorting.sequence",o="dias.transects."+e+".sorting.direction",i="asc",a="desc",s={DIRECTION:i,SORTER:"id",SEQUENCE:t},c=window.localStorage.getItem(o);c||(c=s.DIRECTION);var l=window.localStorage.getItem(n);l||(l=s.SORTER);var u=JSON.parse(window.localStorage.getItem(r));u||(u=s.SEQUENCE);var d=function(e){c=e,c===s.DIRECTION?window.localStorage.removeItem(o):window.localStorage.setItem(o,c)};this.setAscending=function(){d(i)},this.setDescending=function(){d(a)},this.isAscending=function(){return c===i},this.isDescending=function(){return c===a},this.isSorterActive=function(e){return l===e},this.isActive=function(){return l!==s.SORTER||c!==s.DIRECTION},this.resetSorting=function(){l=s.SORTER,window.localStorage.removeItem(n),u=s.SEQUENCE,window.localStorage.removeItem(r)},this.activateSorter=function(e,t){if(l!==e){if(t.length!==s.SEQUENCE.length)throw"Requested sorting sequence length does not match the number of images in the transect!";l=e,l===s.SORTER?window.localStorage.removeItem(n):window.localStorage.setItem(n,l),u=t,u===s.SEQUENCE?window.localStorage.removeItem(r):window.localStorage.setItem(r,JSON.stringify(u))}},this.getSequence=function(){return c===a?u.slice().reverse():u}}]);