/*
 * glfx.js
 * http://evanw.github.com/glfx.js/
 *
 * This version includes custom modifications from:
 * https://github.com/biigle/glfx.js
 *
 * Copyright 2011 Evan Wallace
 * Released under the MIT license
 */
var fx=function(){function warpShader(uniforms,warp){return new Shader(null,uniforms+"uniform sampler2D texture;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 coord=texCoord*texSize;"+warp+"gl_FragColor=texture2D(texture,coord/texSize);vec2 clampedCoord=clamp(coord,vec2(0.0),texSize);if(coord!=clampedCoord){gl_FragColor.a*=max(0.0,1.0-length(coord-clampedCoord));}}")}function matrixWarp(matrix,inverse,useTextureSpace){if(gl.matrixWarp=gl.matrixWarp||warpShader("uniform mat3 matrix;uniform bool useTextureSpace;","if(useTextureSpace)coord=coord/texSize*2.0-1.0;vec3 warp=matrix*vec3(coord,1.0);coord=warp.xy/warp.z;if(useTextureSpace)coord=(coord*0.5+0.5)*texSize;"),matrix=Array.prototype.concat.apply([],matrix),4==matrix.length)matrix=[matrix[0],matrix[1],0,matrix[2],matrix[3],0,0,0,1];else if(9!=matrix.length)throw"can only warp with 2x2 or 3x3 matrix";return simpleShader.call(this,gl.matrixWarp,{matrix:inverse?getInverse(matrix):matrix,texSize:[this.width,this.height],useTextureSpace:0|useTextureSpace}),this}function bulgePinch(centerX,centerY,radius,strength){return gl.bulgePinch=gl.bulgePinch||warpShader("uniform float radius;uniform float strength;uniform vec2 center;","coord-=center;float distance=length(coord);if(distance<radius){float percent=distance/radius;if(strength>0.0){coord*=mix(1.0,smoothstep(0.0,radius/distance,percent),strength*0.75);}else{coord*=mix(1.0,pow(percent,1.0+strength*0.75)*radius/distance,1.0-percent);}}coord+=center;"),simpleShader.call(this,gl.bulgePinch,{radius:radius,strength:clamp(-1,strength,1),center:[centerX,centerY],texSize:[this.width,this.height]}),this}function perspective(before,after){var a=getSquareToQuad.apply(null,after),b=getSquareToQuad.apply(null,before),c=multiply(getInverse(a),b);return this.matrixWarp(c)}function swirl(centerX,centerY,radius,angle){return gl.swirl=gl.swirl||warpShader("uniform float radius;uniform float angle;uniform vec2 center;","coord-=center;float distance=length(coord);if(distance<radius){float percent=(radius-distance)/radius;float theta=percent*percent*angle;float s=sin(theta);float c=cos(theta);coord=vec2(coord.x*c-coord.y*s,coord.x*s+coord.y*c);}coord+=center;"),simpleShader.call(this,gl.swirl,{radius:radius,center:[centerX,centerY],angle:angle,texSize:[this.width,this.height]}),this}function sepia(amount){return gl.sepia=gl.sepia||new Shader(null,"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float r=color.r;float g=color.g;float b=color.b;color.r=min(1.0,(r*(1.0-(0.607*amount)))+(g*(0.769*amount))+(b*(0.189*amount)));color.g=min(1.0,(r*0.349*amount)+(g*(1.0-(0.314*amount)))+(b*0.168*amount));color.b=min(1.0,(r*0.272*amount)+(g*0.534*amount)+(b*(1.0-(0.869*amount))));gl_FragColor=color;}"),simpleShader.call(this,gl.sepia,{amount:clamp(0,amount,1)}),this}function brightnessRGB(r,g,b){return gl.brightnessRGB=gl.brightnessRGB||new Shader(null,"uniform sampler2D texture;uniform float r;uniform float g;uniform float b;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.r+=r;color.g+=g;color.b+=b;gl_FragColor=color;}"),simpleShader.call(this,gl.brightnessRGB,{r:clamp(-1,r,1),g:clamp(-1,g,1),b:clamp(-1,b,1)}),this}function vibrance(amount){return gl.vibrance=gl.vibrance||new Shader(null,"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float average=(color.r+color.g+color.b)/3.0;float mx=max(color.r,max(color.g,color.b));float amt=(mx-average)*(-amount*3.0);color.rgb=mix(color.rgb,vec3(mx),amt);gl_FragColor=color;}"),simpleShader.call(this,gl.vibrance,{amount:clamp(-1,amount,1)}),this}function noise(amount){return gl.noise=gl.noise||new Shader(null,"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;float rand(vec2 co){return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);}void main(){vec4 color=texture2D(texture,texCoord);float diff=(rand(texCoord)-0.5)*amount;color.r+=diff;color.g+=diff;color.b+=diff;gl_FragColor=color;}"),simpleShader.call(this,gl.noise,{amount:clamp(0,amount,1)}),this}function brightnessContrast(brightness,contrast){return gl.brightnessContrast=gl.brightnessContrast||new Shader(null,"uniform sampler2D texture;uniform float brightness;uniform float contrast;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.rgb+=brightness;if(contrast>0.0){color.rgb=(color.rgb-0.5)/(1.0-contrast)+0.5;}else{color.rgb=(color.rgb-0.5)*(1.0+contrast)+0.5;}gl_FragColor=color;}"),simpleShader.call(this,gl.brightnessContrast,{brightness:clamp(-1,brightness,1),contrast:clamp(-1,contrast,1)}),this}function hueSaturation(hue,saturation){return gl.hueSaturation=gl.hueSaturation||new Shader(null,"uniform sampler2D texture;uniform float hue;uniform float saturation;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float angle=hue*3.14159265;float s=sin(angle),c=cos(angle);vec3 weights=(vec3(2.0*c,-sqrt(3.0)*s-c,sqrt(3.0)*s-c)+1.0)/3.0;float len=length(color.rgb);color.rgb=vec3(dot(color.rgb,weights.xyz),dot(color.rgb,weights.zxy),dot(color.rgb,weights.yzx));float average=(color.r+color.g+color.b)/3.0;if(saturation>0.0){color.rgb+=(average-color.rgb)*(1.0-1.0/(1.001-saturation));}else{color.rgb+=(average-color.rgb)*(-saturation);}gl_FragColor=color;}"),simpleShader.call(this,gl.hueSaturation,{hue:clamp(-1,hue,1),saturation:clamp(-1,saturation,1)}),this}function vignette(size,amount){return gl.vignette=gl.vignette||new Shader(null,"uniform sampler2D texture;uniform float size;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float dist=distance(texCoord,vec2(0.5,0.5));color.rgb*=smoothstep(0.8,size*0.799,dist*(amount+size));gl_FragColor=color;}"),simpleShader.call(this,gl.vignette,{size:clamp(0,size,1),amount:clamp(0,amount,1)}),this}function splineInterpolate(points){for(var interpolator=new SplineInterpolator(points),array=[],i=0;i<256;i++)array.push(clamp(0,Math.floor(256*interpolator.interpolate(i/255)),255));return array}function curves(red,green,blue){red=splineInterpolate(red),1==arguments.length?green=blue=red:(green=splineInterpolate(green),blue=splineInterpolate(blue));for(var array=[],i=0;i<256;i++)array.splice(array.length,0,red[i],green[i],blue[i],255);return this._.extraTexture.initFromBytes(256,1,array),this._.extraTexture.use(1),gl.curves=gl.curves||new Shader(null,"uniform sampler2D texture;uniform sampler2D map;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.r=texture2D(map,vec2(color.r)).r;color.g=texture2D(map,vec2(color.g)).g;color.b=texture2D(map,vec2(color.b)).b;gl_FragColor=color;}"),gl.curves.textures({map:1}),simpleShader.call(this,gl.curves,{}),this}function unsharpMask(radius,strength){return gl.unsharpMask=gl.unsharpMask||new Shader(null,"uniform sampler2D blurredTexture;uniform sampler2D originalTexture;uniform float strength;uniform float threshold;varying vec2 texCoord;void main(){vec4 blurred=texture2D(blurredTexture,texCoord);vec4 original=texture2D(originalTexture,texCoord);gl_FragColor=mix(blurred,original,1.0+strength);}"),this._.extraTexture.ensureFormat(this._.texture),this._.texture.use(),this._.extraTexture.drawTo(function(){Shader.getDefaultShader().drawRect()}),this._.extraTexture.use(1),this.triangleBlur(radius),gl.unsharpMask.textures({originalTexture:1}),simpleShader.call(this,gl.unsharpMask,{strength:strength}),this._.extraTexture.unuse(1),this}function denoise(exponent){gl.denoise=gl.denoise||new Shader(null,"uniform sampler2D texture;uniform float exponent;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;void main(){vec4 center=texture2D(texture,texCoord);vec4 color=vec4(0.0);float total=0.0;for(float x=-4.0;x<=4.0;x+=1.0){for(float y=-4.0;y<=4.0;y+=1.0){vec4 sample=texture2D(texture,texCoord+vec2(x,y)/texSize);float weight=1.0-abs(dot(sample.rgb-center.rgb,vec3(0.25)));weight=pow(weight,exponent);color+=sample*weight;total+=weight;}}gl_FragColor=color/total;}");for(var i=0;i<2;i++)simpleShader.call(this,gl.denoise,{exponent:Math.max(0,exponent),texSize:[this.width,this.height]});return this}function triangleBlur(radius){return gl.triangleBlur=gl.triangleBlur||new Shader(null,"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;"+randomShaderFunc+"void main(){vec4 color=vec4(0.0);float total=0.0;float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec4 sample=texture2D(texture,texCoord+delta*percent);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}"),simpleShader.call(this,gl.triangleBlur,{delta:[radius/this.width,0]}),simpleShader.call(this,gl.triangleBlur,{delta:[0,radius/this.height]}),this}function tiltShift(startX,startY,endX,endY,blurRadius,gradientRadius){gl.tiltShift=gl.tiltShift||new Shader(null,"uniform sampler2D texture;uniform float blurRadius;uniform float gradientRadius;uniform vec2 start;uniform vec2 end;uniform vec2 delta;uniform vec2 texSize;varying vec2 texCoord;"+randomShaderFunc+"void main(){vec4 color=vec4(0.0);float total=0.0;float offset=random(vec3(12.9898,78.233,151.7182),0.0);vec2 normal=normalize(vec2(start.y-end.y,end.x-start.x));float radius=smoothstep(0.0,1.0,abs(dot(texCoord*texSize-start,normal))/gradientRadius)*blurRadius;for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec4 sample=texture2D(texture,texCoord+delta/texSize*percent*radius);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}");var dx=endX-startX,dy=endY-startY,d=Math.sqrt(dx*dx+dy*dy);return simpleShader.call(this,gl.tiltShift,{blurRadius:blurRadius,gradientRadius:gradientRadius,start:[startX,startY],end:[endX,endY],delta:[dx/d,dy/d],texSize:[this.width,this.height]}),simpleShader.call(this,gl.tiltShift,{blurRadius:blurRadius,gradientRadius:gradientRadius,start:[startX,startY],end:[endX,endY],delta:[-dy/d,dx/d],texSize:[this.width,this.height]}),this}function lensBlur(radius,brightness,angle){gl.lensBlurPrePass=gl.lensBlurPrePass||new Shader(null,"uniform sampler2D texture;uniform float power;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color=pow(color,vec4(power));gl_FragColor=vec4(color);}");var common="uniform sampler2D texture0;uniform sampler2D texture1;uniform vec2 delta0;uniform vec2 delta1;uniform float power;varying vec2 texCoord;"+randomShaderFunc+"vec4 sample(vec2 delta){float offset=random(vec3(delta,151.7182),0.0);vec4 color=vec4(0.0);float total=0.0;for(float t=0.0;t<=30.0;t++){float percent=(t+offset)/30.0;color+=texture2D(texture0,texCoord+delta*percent);total+=1.0;}return color/total;}";gl.lensBlur0=gl.lensBlur0||new Shader(null,common+"void main(){gl_FragColor=sample(delta0);}"),gl.lensBlur1=gl.lensBlur1||new Shader(null,common+"void main(){gl_FragColor=(sample(delta0)+sample(delta1))*0.5;}"),gl.lensBlur2=gl.lensBlur2||new Shader(null,common+"void main(){vec4 color=(sample(delta0)+2.0*texture2D(texture1,texCoord))/3.0;gl_FragColor=pow(color,vec4(power));}").textures({texture1:1});for(var dir=[],i=0;i<3;i++){var a=angle+i*Math.PI*2/3;dir.push([radius*Math.sin(a)/this.width,radius*Math.cos(a)/this.height])}var power=Math.pow(10,clamp(-1,brightness,1));return simpleShader.call(this,gl.lensBlurPrePass,{power:power}),this._.extraTexture.ensureFormat(this._.texture),simpleShader.call(this,gl.lensBlur0,{delta0:dir[0]},this._.texture,this._.extraTexture),simpleShader.call(this,gl.lensBlur1,{delta0:dir[1],delta1:dir[2]},this._.extraTexture,this._.extraTexture),simpleShader.call(this,gl.lensBlur0,{delta0:dir[1]}),this._.extraTexture.use(1),simpleShader.call(this,gl.lensBlur2,{power:1/power,delta0:dir[2]}),this}function zoomBlur(centerX,centerY,strength){return gl.zoomBlur=gl.zoomBlur||new Shader(null,"uniform sampler2D texture;uniform vec2 center;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;"+randomShaderFunc+"void main(){vec4 color=vec4(0.0);float total=0.0;vec2 toCenter=center-texCoord*texSize;float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=0.0;t<=40.0;t++){float percent=(t+offset)/40.0;float weight=4.0*(percent-percent*percent);vec4 sample=texture2D(texture,texCoord+toCenter*percent*strength/texSize);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}"),simpleShader.call(this,gl.zoomBlur,{center:[centerX,centerY],strength:strength,texSize:[this.width,this.height]}),this}function dotScreen(centerX,centerY,angle,size){return gl.dotScreen=gl.dotScreen||new Shader(null,"uniform sampler2D texture;uniform vec2 center;uniform float angle;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;float pattern(){float s=sin(angle),c=cos(angle);vec2 tex=texCoord*texSize-center;vec2 point=vec2(c*tex.x-s*tex.y,s*tex.x+c*tex.y)*scale;return(sin(point.x)*sin(point.y))*4.0;}void main(){vec4 color=texture2D(texture,texCoord);float average=(color.r+color.g+color.b)/3.0;gl_FragColor=vec4(vec3(average*10.0-5.0+pattern()),color.a);}"),simpleShader.call(this,gl.dotScreen,{center:[centerX,centerY],angle:angle,scale:Math.PI/size,texSize:[this.width,this.height]}),this}function ink(strength){return gl.ink=gl.ink||new Shader(null,"uniform sampler2D texture;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 dx=vec2(1.0/texSize.x,0.0);vec2 dy=vec2(0.0,1.0/texSize.y);vec4 color=texture2D(texture,texCoord);float bigTotal=0.0;float smallTotal=0.0;vec3 bigAverage=vec3(0.0);vec3 smallAverage=vec3(0.0);for(float x=-2.0;x<=2.0;x+=1.0){for(float y=-2.0;y<=2.0;y+=1.0){vec3 sample=texture2D(texture,texCoord+dx*x+dy*y).rgb;bigAverage+=sample;bigTotal+=1.0;if(abs(x)+abs(y)<2.0){smallAverage+=sample;smallTotal+=1.0;}}}vec3 edge=max(vec3(0.0),bigAverage/bigTotal-smallAverage/smallTotal);gl_FragColor=vec4(color.rgb-dot(edge,edge)*strength*100000.0,color.a);}"),simpleShader.call(this,gl.ink,{strength:strength*strength*strength*strength*strength,texSize:[this.width,this.height]}),this}function hexagonalPixelate(centerX,centerY,scale){return gl.hexagonalPixelate=gl.hexagonalPixelate||new Shader(null,"uniform sampler2D texture;uniform vec2 center;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 tex=(texCoord*texSize-center)/scale;tex.y/=0.866025404;tex.x-=tex.y*0.5;vec2 a;if(tex.x+tex.y-floor(tex.x)-floor(tex.y)<1.0)a=vec2(floor(tex.x),floor(tex.y));else a=vec2(ceil(tex.x),ceil(tex.y));vec2 b=vec2(ceil(tex.x),floor(tex.y));vec2 c=vec2(floor(tex.x),ceil(tex.y));vec3 TEX=vec3(tex.x,tex.y,1.0-tex.x-tex.y);vec3 A=vec3(a.x,a.y,1.0-a.x-a.y);vec3 B=vec3(b.x,b.y,1.0-b.x-b.y);vec3 C=vec3(c.x,c.y,1.0-c.x-c.y);float alen=length(TEX-A);float blen=length(TEX-B);float clen=length(TEX-C);vec2 choice;if(alen<blen){if(alen<clen)choice=a;else choice=c;}else{if(blen<clen)choice=b;else choice=c;}choice.x+=choice.y*0.5;choice.y*=0.866025404;choice*=scale/texSize;gl_FragColor=texture2D(texture,choice+center/texSize);}"),simpleShader.call(this,gl.hexagonalPixelate,{center:[centerX,centerY],scale:scale,texSize:[this.width,this.height]}),this}function colorHalftone(centerX,centerY,angle,size){return gl.colorHalftone=gl.colorHalftone||new Shader(null,"uniform sampler2D texture;uniform vec2 center;uniform float angle;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;float pattern(float angle){float s=sin(angle),c=cos(angle);vec2 tex=texCoord*texSize-center;vec2 point=vec2(c*tex.x-s*tex.y,s*tex.x+c*tex.y)*scale;return(sin(point.x)*sin(point.y))*4.0;}void main(){vec4 color=texture2D(texture,texCoord);vec3 cmy=1.0-color.rgb;float k=min(cmy.x,min(cmy.y,cmy.z));cmy=(cmy-k)/(1.0-k);cmy=clamp(cmy*10.0-3.0+vec3(pattern(angle+0.26179),pattern(angle+1.30899),pattern(angle)),0.0,1.0);k=clamp(k*10.0-5.0+pattern(angle+0.78539),0.0,1.0);gl_FragColor=vec4(1.0-cmy-k,color.a);}"),simpleShader.call(this,gl.colorHalftone,{center:[centerX,centerY],angle:angle,scale:Math.PI/size,texSize:[this.width,this.height]}),this}function edgeWork(radius){return gl.edgeWork1=gl.edgeWork1||new Shader(null,"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;"+randomShaderFunc+"void main(){vec2 color=vec2(0.0);vec2 total=vec2(0.0);float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec3 sample=texture2D(texture,texCoord+delta*percent).rgb;float average=(sample.r+sample.g+sample.b)/3.0;color.x+=average*weight;total.x+=weight;if(abs(t)<15.0){weight=weight*2.0-1.0;color.y+=average*weight;total.y+=weight;}}gl_FragColor=vec4(color/total,0.0,1.0);}"),gl.edgeWork2=gl.edgeWork2||new Shader(null,"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;"+randomShaderFunc+"void main(){vec2 color=vec2(0.0);vec2 total=vec2(0.0);float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec2 sample=texture2D(texture,texCoord+delta*percent).xy;color.x+=sample.x*weight;total.x+=weight;if(abs(t)<15.0){weight=weight*2.0-1.0;color.y+=sample.y*weight;total.y+=weight;}}float c=clamp(10000.0*(color.y/total.y-color.x/total.x)+0.5,0.0,1.0);gl_FragColor=vec4(c,c,c,1.0);}"),simpleShader.call(this,gl.edgeWork1,{delta:[radius/this.width,0]}),simpleShader.call(this,gl.edgeWork2,{delta:[0,radius/this.height]}),this}function getSquareToQuad(x0,y0,x1,y1,x2,y2,x3,y3){var dx1=x1-x2,dy1=y1-y2,dx2=x3-x2,dy2=y3-y2,dx3=x0-x1+x2-x3,dy3=y0-y1+y2-y3,det=dx1*dy2-dx2*dy1,a=(dx3*dy2-dx2*dy3)/det,b=(dx1*dy3-dx3*dy1)/det;return[x1-x0+a*x1,y1-y0+a*y1,a,x3-x0+b*x3,y3-y0+b*y3,b,x0,y0,1]}function getInverse(m){var a=m[0],b=m[1],c=m[2],d=m[3],e=m[4],f=m[5],g=m[6],h=m[7],i=m[8],det=a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;return[(e*i-f*h)/det,(c*h-b*i)/det,(b*f-c*e)/det,(f*g-d*i)/det,(a*i-c*g)/det,(c*d-a*f)/det,(d*h-e*g)/det,(b*g-a*h)/det,(a*e-b*d)/det]}function multiply(a,b){return[a[0]*b[0]+a[1]*b[3]+a[2]*b[6],a[0]*b[1]+a[1]*b[4]+a[2]*b[7],a[0]*b[2]+a[1]*b[5]+a[2]*b[8],a[3]*b[0]+a[4]*b[3]+a[5]*b[6],a[3]*b[1]+a[4]*b[4]+a[5]*b[7],a[3]*b[2]+a[4]*b[5]+a[5]*b[8],a[6]*b[0]+a[7]*b[3]+a[8]*b[6],a[6]*b[1]+a[7]*b[4]+a[8]*b[7],a[6]*b[2]+a[7]*b[5]+a[8]*b[8]]}function clamp(lo,value,hi){return Math.max(lo,Math.min(value,hi))}function wrapTexture(texture){return{_:texture,loadContentsOf:function(element){gl=this._.gl,this._.loadContentsOf(element)},destroy:function(){gl=this._.gl,this._.destroy()}}}function texture(element){return wrapTexture(Texture.fromElement(element))}function initialize(width,height){var type=gl.UNSIGNED_BYTE;if(gl.getExtension("OES_texture_float")&&gl.getExtension("OES_texture_float_linear")){var testTexture=new Texture(100,100,gl.RGBA,gl.FLOAT);try{testTexture.drawTo(function(){type=gl.FLOAT})}catch(e){}testTexture.destroy()}this._.texture&&this._.texture.destroy(),this._.spareTexture&&this._.spareTexture.destroy(),this.width=width,this.height=height,this._.texture=new Texture(width,height,gl.RGBA,type),this._.spareTexture=new Texture(width,height,gl.RGBA,type),this._.extraTexture=this._.extraTexture||new Texture(0,0,gl.RGBA,type),this._.flippedShader=this._.flippedShader||new Shader(null,"uniform sampler2D texture;varying vec2 texCoord;void main(){gl_FragColor=texture2D(texture,vec2(texCoord.x,1.0-texCoord.y));}"),this._.isInitialized=!0}function draw(texture,width,height){return this._.isInitialized&&texture._.width==this.width&&texture._.height==this.height||initialize.call(this,width?width:texture._.width,height?height:texture._.height),texture._.use(),this._.texture.drawTo(function(){Shader.getDefaultShader().drawRect()}),this}function update(){return this._.texture.use(),this._.flippedShader.drawRect(),this}function simpleShader(shader,uniforms,textureIn,textureOut){(textureIn||this._.texture).use(),this._.spareTexture.drawTo(function(){shader.uniforms(uniforms).drawRect()}),this._.spareTexture.swapWith(textureOut||this._.texture)}function replace(node){return node.parentNode.insertBefore(this,node),node.parentNode.removeChild(node),this}function contents(){var texture=new Texture(this._.texture.width,this._.texture.height,gl.RGBA,gl.UNSIGNED_BYTE);return this._.texture.use(),texture.drawTo(function(){Shader.getDefaultShader().drawRect()}),wrapTexture(texture)}function getPixelArray(){var w=this._.texture.width,h=this._.texture.height,array=new Uint8Array(w*h*4);return this._.texture.drawTo(function(){gl.readPixels(0,0,w,h,gl.RGBA,gl.UNSIGNED_BYTE,array)}),array}function wrap(func){return function(){return gl=this._.gl,func.apply(this,arguments)}}function SplineInterpolator(points){var n=points.length;this.xa=[],this.ya=[],this.u=[],this.y2=[],points.sort(function(a,b){return a[0]-b[0]});for(var i=0;i<n;i++)this.xa.push(points[i][0]),this.ya.push(points[i][1]);this.u[0]=0,this.y2[0]=0;for(var i=1;i<n-1;++i){var wx=this.xa[i+1]-this.xa[i-1],sig=(this.xa[i]-this.xa[i-1])/wx,p=sig*this.y2[i-1]+2;this.y2[i]=(sig-1)/p;var ddydx=(this.ya[i+1]-this.ya[i])/(this.xa[i+1]-this.xa[i])-(this.ya[i]-this.ya[i-1])/(this.xa[i]-this.xa[i-1]);this.u[i]=(6*ddydx/wx-sig*this.u[i-1])/p}this.y2[n-1]=0;for(var i=n-2;i>=0;--i)this.y2[i]=this.y2[i]*this.y2[i+1]+this.u[i]}var gl,exports={},randomShaderFunc="float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}";exports.canvas=function(){var canvas=document.createElement("canvas");try{gl=canvas.getContext("experimental-webgl",{premultipliedAlpha:!1})}catch(e){gl=null}if(!gl)throw"This browser does not support WebGL";return canvas._={gl:gl,isInitialized:!1,texture:null,spareTexture:null,flippedShader:null},canvas.texture=wrap(texture),canvas.draw=wrap(draw),canvas.update=wrap(update),canvas.replace=wrap(replace),canvas.contents=wrap(contents),canvas.getPixelArray=wrap(getPixelArray),canvas.brightnessContrast=wrap(brightnessContrast),canvas.brightnessRGB=wrap(brightnessRGB),canvas.hexagonalPixelate=wrap(hexagonalPixelate),canvas.hueSaturation=wrap(hueSaturation),canvas.colorHalftone=wrap(colorHalftone),canvas.triangleBlur=wrap(triangleBlur),canvas.unsharpMask=wrap(unsharpMask),canvas.perspective=wrap(perspective),canvas.matrixWarp=wrap(matrixWarp),canvas.bulgePinch=wrap(bulgePinch),canvas.tiltShift=wrap(tiltShift),canvas.dotScreen=wrap(dotScreen),canvas.edgeWork=wrap(edgeWork),canvas.lensBlur=wrap(lensBlur),canvas.zoomBlur=wrap(zoomBlur),canvas.noise=wrap(noise),canvas.denoise=wrap(denoise),canvas.curves=wrap(curves),canvas.swirl=wrap(swirl),canvas.ink=wrap(ink),canvas.vignette=wrap(vignette),canvas.vibrance=wrap(vibrance),canvas.sepia=wrap(sepia),canvas},exports.splineInterpolate=splineInterpolate;var Texture=function(){function Texture(width,height,format,type){this.gl=gl,this.id=gl.createTexture(),this.width=width,this.height=height,this.format=format,this.type=type,gl.bindTexture(gl.TEXTURE_2D,this.id),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),width&&height&&gl.texImage2D(gl.TEXTURE_2D,0,this.format,width,height,0,this.format,this.type,null)}function getCanvas(texture){null==canvas&&(canvas=document.createElement("canvas")),canvas.width=texture.width,canvas.height=texture.height;var c=canvas.getContext("2d");return c.clearRect(0,0,canvas.width,canvas.height),c}Texture.fromElement=function(element){var texture=new Texture(0,0,gl.RGBA,gl.UNSIGNED_BYTE);return texture.loadContentsOf(element),texture},Texture.prototype.loadContentsOf=function(element){this.width=element.width||element.videoWidth,this.height=element.height||element.videoHeight,gl.bindTexture(gl.TEXTURE_2D,this.id),
gl.texImage2D(gl.TEXTURE_2D,0,this.format,this.format,this.type,element)},Texture.prototype.initFromBytes=function(width,height,data){this.width=width,this.height=height,this.format=gl.RGBA,this.type=gl.UNSIGNED_BYTE,gl.bindTexture(gl.TEXTURE_2D,this.id),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width,height,0,gl.RGBA,this.type,new Uint8Array(data))},Texture.prototype.destroy=function(){gl.deleteTexture(this.id),this.id=null},Texture.prototype.use=function(unit){gl.activeTexture(gl.TEXTURE0+(unit||0)),gl.bindTexture(gl.TEXTURE_2D,this.id)},Texture.prototype.unuse=function(unit){gl.activeTexture(gl.TEXTURE0+(unit||0)),gl.bindTexture(gl.TEXTURE_2D,null)},Texture.prototype.ensureFormat=function(width,height,format,type){if(1==arguments.length){var texture=arguments[0];width=texture.width,height=texture.height,format=texture.format,type=texture.type}width==this.width&&height==this.height&&format==this.format&&type==this.type||(this.width=width,this.height=height,this.format=format,this.type=type,gl.bindTexture(gl.TEXTURE_2D,this.id),gl.texImage2D(gl.TEXTURE_2D,0,this.format,width,height,0,this.format,this.type,null))},Texture.prototype.drawTo=function(callback){if(gl.framebuffer=gl.framebuffer||gl.createFramebuffer(),gl.bindFramebuffer(gl.FRAMEBUFFER,gl.framebuffer),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,this.id,0),gl.checkFramebufferStatus(gl.FRAMEBUFFER)!==gl.FRAMEBUFFER_COMPLETE)throw new Error("incomplete framebuffer");gl.viewport(0,0,this.width,this.height),callback(),gl.bindFramebuffer(gl.FRAMEBUFFER,null)};var canvas=null;return Texture.prototype.fillUsingCanvas=function(callback){return callback(getCanvas(this)),this.format=gl.RGBA,this.type=gl.UNSIGNED_BYTE,gl.bindTexture(gl.TEXTURE_2D,this.id),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,canvas),this},Texture.prototype.toImage=function(image){this.use(),Shader.getDefaultShader().drawRect();var size=this.width*this.height*4,pixels=new Uint8Array(size),c=getCanvas(this),data=c.createImageData(this.width,this.height);gl.readPixels(0,0,this.width,this.height,gl.RGBA,gl.UNSIGNED_BYTE,pixels);for(var i=0;i<size;i++)data.data[i]=pixels[i];c.putImageData(data,0,0),image.src=canvas.toDataURL()},Texture.prototype.swapWith=function(other){var temp;temp=other.id,other.id=this.id,this.id=temp,temp=other.width,other.width=this.width,this.width=temp,temp=other.height,other.height=this.height,this.height=temp,temp=other.format,other.format=this.format,this.format=temp},Texture}();SplineInterpolator.prototype.interpolate=function(x){for(var n=this.ya.length,klo=0,khi=n-1;khi-klo>1;){var k=khi+klo>>1;this.xa[k]>x?khi=k:klo=k}var h=this.xa[khi]-this.xa[klo],a=(this.xa[khi]-x)/h,b=(x-this.xa[klo])/h;return a*this.ya[klo]+b*this.ya[khi]+((a*a*a-a)*this.y2[klo]+(b*b*b-b)*this.y2[khi])*(h*h)/6};var Shader=function(){function isArray(obj){return"[object Array]"==Object.prototype.toString.call(obj)}function isNumber(obj){return"[object Number]"==Object.prototype.toString.call(obj)}function compileSource(type,source){var shader=gl.createShader(type);if(gl.shaderSource(shader,source),gl.compileShader(shader),!gl.getShaderParameter(shader,gl.COMPILE_STATUS))throw"compile error: "+gl.getShaderInfoLog(shader);return shader}function Shader(vertexSource,fragmentSource){if(this.vertexAttribute=null,this.texCoordAttribute=null,this.program=gl.createProgram(),vertexSource=vertexSource||defaultVertexSource,fragmentSource=fragmentSource||defaultFragmentSource,fragmentSource="precision highp float;"+fragmentSource,gl.attachShader(this.program,compileSource(gl.VERTEX_SHADER,vertexSource)),gl.attachShader(this.program,compileSource(gl.FRAGMENT_SHADER,fragmentSource)),gl.linkProgram(this.program),!gl.getProgramParameter(this.program,gl.LINK_STATUS))throw"link error: "+gl.getProgramInfoLog(this.program)}var defaultVertexSource="attribute vec2 vertex;attribute vec2 _texCoord;varying vec2 texCoord;void main(){texCoord=_texCoord;gl_Position=vec4(vertex*2.0-1.0,0.0,1.0);}",defaultFragmentSource="uniform sampler2D texture;varying vec2 texCoord;void main(){gl_FragColor=texture2D(texture,texCoord);}";return Shader.prototype.destroy=function(){gl.deleteProgram(this.program),this.program=null},Shader.prototype.uniforms=function(uniforms){gl.useProgram(this.program);for(var name in uniforms)if(uniforms.hasOwnProperty(name)){var location=gl.getUniformLocation(this.program,name);if(null!==location){var value=uniforms[name];if(isArray(value))switch(value.length){case 1:gl.uniform1fv(location,new Float32Array(value));break;case 2:gl.uniform2fv(location,new Float32Array(value));break;case 3:gl.uniform3fv(location,new Float32Array(value));break;case 4:gl.uniform4fv(location,new Float32Array(value));break;case 9:gl.uniformMatrix3fv(location,!1,new Float32Array(value));break;case 16:gl.uniformMatrix4fv(location,!1,new Float32Array(value));break;default:throw"dont't know how to load uniform \""+name+'" of length '+value.length}else{if(!isNumber(value))throw'attempted to set uniform "'+name+'" to invalid value '+(value||"undefined").toString();gl.uniform1f(location,value)}}}return this},Shader.prototype.textures=function(textures){gl.useProgram(this.program);for(var name in textures)textures.hasOwnProperty(name)&&gl.uniform1i(gl.getUniformLocation(this.program,name),textures[name]);return this},Shader.prototype.drawRect=function(left,top,right,bottom){var undefined,viewport=gl.getParameter(gl.VIEWPORT);top=top!==undefined?(top-viewport[1])/viewport[3]:0,left=left!==undefined?(left-viewport[0])/viewport[2]:0,right=right!==undefined?(right-viewport[0])/viewport[2]:1,bottom=bottom!==undefined?(bottom-viewport[1])/viewport[3]:1,null==gl.vertexBuffer&&(gl.vertexBuffer=gl.createBuffer()),gl.bindBuffer(gl.ARRAY_BUFFER,gl.vertexBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([left,top,left,bottom,right,top,right,bottom]),gl.STATIC_DRAW),null==gl.texCoordBuffer&&(gl.texCoordBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,gl.texCoordBuffer),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,1]),gl.STATIC_DRAW)),null==this.vertexAttribute&&(this.vertexAttribute=gl.getAttribLocation(this.program,"vertex"),gl.enableVertexAttribArray(this.vertexAttribute)),null==this.texCoordAttribute&&(this.texCoordAttribute=gl.getAttribLocation(this.program,"_texCoord"),gl.enableVertexAttribArray(this.texCoordAttribute)),gl.useProgram(this.program),gl.bindBuffer(gl.ARRAY_BUFFER,gl.vertexBuffer),gl.vertexAttribPointer(this.vertexAttribute,2,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,gl.texCoordBuffer),gl.vertexAttribPointer(this.texCoordAttribute,2,gl.FLOAT,!1,0,0),gl.drawArrays(gl.TRIANGLE_STRIP,0,4)},Shader.getDefaultShader=function(){return gl.defaultShader=gl.defaultShader||new Shader,gl.defaultShader},Shader}();return exports}();

module.exports = fx;
