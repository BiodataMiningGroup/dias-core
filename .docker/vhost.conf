
server {
    server_name example.com;
    listen           443 ssl http2 default_server;
    listen      [::]:443 ssl http2 default_server;

    # SSL configuration generated 2021-05-26, Mozilla Guideline v5.6,
    # nginx 1.16.1, OpenSSL 1.1.1c, intermediate configuration, no OCSP
    # https://ssl-config.mozilla.org/#server=nginx&version=1.16.1&config=intermediate&openssl=1.1.1c&ocsp=false&guideline=5.6
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    ssl_dhparam /etc/nginx/conf.d/ffdhe2048.txt;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=63072000" always;

    server_tokens off;

    gzip            on;
    gzip_min_length 5000;
    gzip_types      text/plain text/css application/javascript application/json;

    index index.php index.html;
    root /var/www/public;
    log_not_found off;
    client_max_body_size 50m;

    include /etc/nginx/conf.d/*.include;

    location ~ ^/(assets|vendor|storage|doc)($|/) {
        # Disable rewrite for directories with static files.
        # We do this so the app is not started to serve 404s if a file is missing.
    }

    location / {
        try_files $uri /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass            app:9000;
        fastcgi_index           index.php;
        include                 fastcgi_params;
        fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param           PATH_INFO $fastcgi_path_info;
    }
}

server {
    server_name example.com;
    listen      80;
    listen [::]:80;

    server_tokens off;
    return 301 https://$host$request_uri;
}
